#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define WORKMAN 0
#define NAVNUM  1
#define SYMBOLS 2
#define OSL     3

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

/ {
    behaviors {
            HTSL: holdtap_stickylayer {
                compatible = "zmk,behavior-hold-tap";
                label = "HTSL";
                #binding-cells = <2>;
                tapping-term-ms = <150>;
                quick-tap-ms = <0>;
                flavor = "hold-preferred";
                bindings = <&kp>, <&sl>;
            };
        };
    macros {
        LOCK: LOCK {
            label = "LOCK";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press   &kp LCMD>
                , <&macro_press   &kp LCTRL>
                , <&macro_tap     &kp Q>
                , <&macro_release &kp LCTRL>
                , <&macro_release &kp LCMD>
                ;
        };
        NEW_TAB: NEW_TAB {
            label = "NEW_TAB";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press   &kp LCMD>
                , <&macro_tap     &kp T>
                , <&macro_release &kp LCMD>
                ;
        };
        CTAGS_NEXT: CTAGS_NEXT {
            label = "CTAGS_NEXT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press   &kp LCTRL>
                , <&macro_tap     &kp LBKT>
                , <&macro_release &kp LCTRL>
                ;
        };
    };
	keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "WKMAN";
            bindings = <
   &kp ESC   &kp Q &kp D &kp R &kp W &kp B                      &kp J  &kp F  &kp U    &kp P    &kp EXCL   &kp C_VOL_DN
   &kp LSHFT &kp A &kp S &kp H &kp T &kp G                      &kp Y  &kp N  &kp E    &kp O    &kp I      &kp RSFT
   &kp LCTRL &kp Z &kp X &kp M &kp C &kp V                      &kp K  &kp L  &kp CMMA &kp DOT  &kp QMARK  &kp RALT
          &kp LCMD  &kp SPC  &lt NAVNUM TAB                     &lt SYMBOLS ENTER      &kp BSPC &HTSL RCMD OSL
                        >;
                };

        navnum_layer {
            label = "NVNM";
            bindings = <
   &trans  &none &kp KP_N7 &kp KP_N8 &kp KP_N9 &LOCK             &NEW_TAB    &kp G           &kp AMPS     &kp KP_N0  &none     &kp C_VOL_UP
   &trans  &none &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_N0         &CTAGS_NEXT &kp LEFT        &kp DOWN     &kp UP     &kp RIGHT &trans
   &trans  &none &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp X             &kp EQUAL   &kp KP_ASTERISK &kp KP_MINUS &kp PLUS   &kp SLASH &trans
                                   &trans &trans &trans          &trans &trans &trans
                        >;
                };

    	symbols_layer {
            label = "SYM";
            bindings = < 
   &trans     &kp COLON &kp AMPS   &kp LT   &kp GT   &kp PRCNT     &kp TILDE  &kp LBRC        &kp RBRC     &kp PIPE  &kp EXCL  &kp C_VOL_UP
   &trans     &kp SEMI  &kp DOLLAR &kp LPAR &kp RPAR &kp SQT       &kp DQT    &kp LBKT        &kp RBKT     &kp UNDER &kp BSLH  &trans
   &trans     &none     &kp CARET  &kp AT   &kp HASH &kp GRAVE     &kp EQUAL  &kp KP_ASTERISK &kp KP_MINUS &kp PLUS  &kp SLASH &trans
                                   &trans &trans &trans            &trans &trans &trans
                        >;
                };
     	osl_layer {
            label = "OSL";
            bindings = < 
   &trans   &kp LG(LS(N5))  &kp LC(LEFT)    &kp LC(UP)  &kp LC(RIGHT)   &kp LG(LS(N4))      &none   &kp F7  &kp F8  &kp F9  &kp F10 &bt BT_PRV
   &kp CAPS &kp LG(Z)       &kp LG(X)       &kp LG(C)   &kp LG(V)       &kp LG(LA(LS(V)))   &none   &kp F4  &kp F5  &kp F6  &kp F11 &bt BT_NXT
   &trans   &none           &kp LG(B)       &kp LG(I)   &kp LG(U)       &none               &none   &kp F1  &kp F2  &kp F3  &kp F12 &bt BT_CLR
                                            &trans      &trans          &trans              &to WORKMAN     &to OSL &trans
                    >;
                };

        };
};
